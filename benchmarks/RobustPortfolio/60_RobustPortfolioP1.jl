function RobustPortfolioP1()
	n1::Int64 = 61
	n2::Int64 = 60

	function F(xy)
		x = @view xy[1:n1]
		y = @view xy[n1+1:n1+n2]
		-x[61]
	end

	function G(xy)
		x = @view xy[1:n1]
		y = @view xy[n1+1:n1+n2]
		[x[1]*y[1] - x[61] + x[2]*y[2] + x[3]*y[3] + x[4]*y[4] + x[5]*y[5] + x[6]*y[6] + x[7]*y[7] + x[8]*y[8] + x[9]*y[9] + x[10]*y[10] + x[11]*y[11] + x[12]*y[12] + x[13]*y[13] + x[14]*y[14] + x[15]*y[15] + x[16]*y[16] + x[17]*y[17] + x[18]*y[18] + x[19]*y[19] + x[20]*y[20] + x[21]*y[21] + x[22]*y[22] + x[23]*y[23] + x[24]*y[24] + x[25]*y[25] + x[26]*y[26] + x[27]*y[27] + x[28]*y[28] + x[29]*y[29] + x[30]*y[30] + x[31]*y[31] + x[32]*y[32] + x[33]*y[33] + x[34]*y[34] + x[35]*y[35] + x[36]*y[36] + x[37]*y[37] + x[38]*y[38] + x[39]*y[39] + x[40]*y[40] + x[41]*y[41] + x[42]*y[42] + x[43]*y[43] + x[44]*y[44] + x[45]*y[45] + x[46]*y[46] + x[47]*y[47] + x[48]*y[48] + x[49]*y[49] + x[50]*y[50] + x[51]*y[51] + x[52]*y[52] + x[53]*y[53] + x[54]*y[54] + x[55]*y[55] + x[56]*y[56] + x[57]*y[57] + x[58]*y[58] + x[59]*y[59] + x[60]*y[60]; x[1]; x[2]; x[3]; x[4]; x[5]; x[6]; x[7]; x[8]; x[9]; x[10]; x[11]; x[12]; x[13]; x[14]; x[15]; x[16]; x[17]; x[18]; x[19]; x[20]; x[21]; x[22]; x[23]; x[24]; x[25]; x[26]; x[27]; x[28]; x[29]; x[30]; x[31]; x[32]; x[33]; x[34]; x[35]; x[36]; x[37]; x[38]; x[39]; x[40]; x[41]; x[42]; x[43]; x[44]; x[45]; x[46]; x[47]; x[48]; x[49]; x[50]; x[51]; x[52]; x[53]; x[54]; x[55]; x[56]; x[57]; x[58]; x[59]; x[60]; 1 - x[2] - x[3] - x[4] - x[5] - x[6] - x[7] - x[8] - x[9] - x[10] - x[11] - x[12] - x[13] - x[14] - x[15] - x[16] - x[17] - x[18] - x[19] - x[20] - x[21] - x[22] - x[23] - x[24] - x[25] - x[26] - x[27] - x[28] - x[29] - x[30] - x[31] - x[32] - x[33] - x[34] - x[35] - x[36] - x[37] - x[38] - x[39] - x[40] - x[41] - x[42] - x[43] - x[44] - x[45] - x[46] - x[47] - x[48] - x[49] - x[50] - x[51] - x[52] - x[53] - x[54] - x[55] - x[56] - x[57] - x[58] - x[59] - x[60] - x[1]; x[1] + x[2] + x[3] + x[4] + x[5] + x[6] + x[7] + x[8] + x[9] + x[10] + x[11] + x[12] + x[13] + x[14] + x[15] + x[16] + x[17] + x[18] + x[19] + x[20] + x[21] + x[22] + x[23] + x[24] + x[25] + x[26] + x[27] + x[28] + x[29] + x[30] + x[31] + x[32] + x[33] + x[34] + x[35] + x[36] + x[37] + x[38] + x[39] + x[40] + x[41] + x[42] + x[43] + x[44] + x[45] + x[46] + x[47] + x[48] + x[49] + x[50] + x[51] + x[52] + x[53] + x[54] + x[55] + x[56] + x[57] + x[58] + x[59] + x[60] - 1]
	end

	function f(xy)
		x = @view xy[1:n1]
		y = @view xy[n1+1:n1+n2]
		x[1]*y[1] - x[61] + x[2]*y[2] + x[3]*y[3] + x[4]*y[4] + x[5]*y[5] + x[6]*y[6] + x[7]*y[7] + x[8]*y[8] + x[9]*y[9] + x[10]*y[10] + x[11]*y[11] + x[12]*y[12] + x[13]*y[13] + x[14]*y[14] + x[15]*y[15] + x[16]*y[16] + x[17]*y[17] + x[18]*y[18] + x[19]*y[19] + x[20]*y[20] + x[21]*y[21] + x[22]*y[22] + x[23]*y[23] + x[24]*y[24] + x[25]*y[25] + x[26]*y[26] + x[27]*y[27] + x[28]*y[28] + x[29]*y[29] + x[30]*y[30] + x[31]*y[31] + x[32]*y[32] + x[33]*y[33] + x[34]*y[34] + x[35]*y[35] + x[36]*y[36] + x[37]*y[37] + x[38]*y[38] + x[39]*y[39] + x[40]*y[40] + x[41]*y[41] + x[42]*y[42] + x[43]*y[43] + x[44]*y[44] + x[45]*y[45] + x[46]*y[46] + x[47]*y[47] + x[48]*y[48] + x[49]*y[49] + x[50]*y[50] + x[51]*y[51] + x[52]*y[52] + x[53]*y[53] + x[54]*y[54] + x[55]*y[55] + x[56]*y[56] + x[57]*y[57] + x[58]*y[58] + x[59]*y[59] + x[60]*y[60]
	end

	function g(xy)
		x = @view xy[1:n1]
		y = @view xy[n1+1:n1+n2]
		[9/4 - (72*(25*y[12] - 29)^2)/305 - (72*(5*y[60] - 6)^2)/61 - (75*(16*y[45] - 19)^2)/488 - (9*(40*y[30] - 47)^2)/244 - (6*(50*y[36] - 59)^2)/305 - (3*(60*y[40] - 71)^2)/244 - (9*(80*y[15] - 93)^2)/488 - (24*(75*y[28] - 88)^2)/2135 - (24*(75*y[44] - 89)^2)/3355 - (9*(100*y[24] - 117)^2)/1220 - (9*(100*y[48] - 119)^2)/2440 - (3*(120*y[10] - 139)^2)/244 - (3*(120*y[50] - 143)^2)/1220 - (6*(150*y[4] - 173)^2)/305 - (6*(150*y[52] - 179)^2)/3965 - (9*(200*y[6] - 231)^2)/1220 - (3*(200*y[18] - 233)^2)/1220 - (9*(200*y[42] - 237)^2)/8540 - (200*y[54] - 239)^2/1220 - (3*(240*y[5] - 277)^2)/488 - (3*(240*y[25] - 281)^2)/2440 - (3*(240*y[35] - 283)^2)/3416 - (3*(240*y[55] - 287)^2)/5368 - (3*(300*y[8] - 347)^2)/1220 - (3*(300*y[16] - 349)^2)/2440 - (3*(300*y[32] - 353)^2)/4880 - (3*(300*y[56] - 359)^2)/8540 - (9*(400*y[3] - 461)^2)/2440 - (3*(400*y[9] - 463)^2)/2440 - (9*(400*y[21] - 467)^2)/17080 - (400*y[27] - 469)^2/2440 - (9*(400*y[33] - 471)^2)/26840 - (9*(400*y[39] - 473)^2)/31720 - (9*(400*y[51] - 477)^2)/41480 - (9*(400*y[57] - 479)^2)/46360 - (3*(600*y[2] - 691)^2)/1220 - (3*(600*y[14] - 697)^2)/8540 - (3*(600*y[22] - 701)^2)/13420 - (3*(600*y[26] - 703)^2)/15860 - (3*(600*y[34] - 707)^2)/20740 - (3*(600*y[38] - 709)^2)/23180 - (3*(600*y[46] - 713)^2)/28060 - (3*(600*y[58] - 719)^2)/35380 - (2251799813685248*(1200*y[1] - 1381)^2)/1831463848464001875 - (2251799813685248*(1200*y[7] - 1387)^2)/12820246939248013125 - (281474976710656*(1200*y[11] - 1391)^2)/2518262791638001875 - (1125899906842624*(1200*y[13] - 1393)^2)/11904515015016009375 - (2251799813685248*(1200*y[17] - 1397)^2)/31134885423888031875 - (140737488355328*(1200*y[19] - 1399)^2)/2174863320051001875 - (562949953421312*(1200*y[23] - 1403)^2)/10530917128668009375 - (70368744177664*(1200*y[29] - 1409)^2)/1659764112670501875 - (562949953421312*(1200*y[31] - 1411)^2)/14193844825596013125 - (281474976710656*(1200*y[37] - 1417)^2)/8470520299146009375 - (1125899906842624*(1200*y[41] - 1421)^2)/37545008893512035625 - (1125899906842624*(1200*y[43] - 1423)^2)/39376472741976031875 - (1125899906842624*(1200*y[47] - 1427)^2)/43039400438904035625 - (1125899906842624*(1200*y[49] - 1429)^2)/44870864287368043125 - (562949953421312*(1200*y[53] - 1433)^2)/24266895992148020625 - (70368744177664*(1200*y[59] - 1439)^2)/3376761470605501875 - (150*(6*y[20] - 7)^2)/61; y[1]; y[2]; y[3]; y[4]; y[5]; y[6]; y[7]; y[8]; y[9]; y[10]; y[11]; y[12]; y[13]; y[14]; y[15]; y[16]; y[17]; y[18]; y[19]; y[20]; y[21]; y[22]; y[23]; y[24]; y[25]; y[26]; y[27]; y[28]; y[29]; y[30]; y[31]; y[32]; y[33]; y[34]; y[35]; y[36]; y[37]; y[38]; y[39]; y[40]; y[41]; y[42]; y[43]; y[44]; y[45]; y[46]; y[47]; y[48]; y[49]; y[50]; y[51]; y[52]; y[53]; y[54]; y[55]; y[56]; y[57]; y[58]; y[59]; y[60]]
	end

	xy_init = Float64[1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1]
	Ff_optimal = Float64[-1.15;0;2]

	(; n1, n2, F, G, f, g, xy_init, Ff_optimal)
end 

