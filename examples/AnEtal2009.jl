using BilevelOptSolver
n1::Int64 = 2
n2::Int64 = 2

function F(xy)
	x = @view xy[1:n1]
	y = @view xy[n1+1:n1+n2]
	y[1]*((3*x[1])/5 + (3*x[2])/10 + y[2]/5 + 4291154981323245/35184372088832) + y[2]*((9*x[2])/10 - (11*x[1])/10 + y[1]/5 + 2632215443732955/8796093022208) + x[2]*((11*x[1])/5 - (11*x[2])/10 + (3*y[1])/10 + (9*y[2])/10 + 1539959097364463/17592186044416) + x[1]*((11*x[2])/5 - (19*x[1])/10 + (3*y[1])/5 - (11*y[2])/10 + 8230897778081839/8796093022208)
end

function G(xy)
	x = @view xy[1:n1]
	y = @view xy[n1+1:n1+n2]
	[x[1]; x[2]; y[1]; y[2]; 8666302095696949/140737488355328 - (1376100198890959*y[1])/281474976710656 - (523855893905969*y[2])/70368744177664 - (1094625222180303*x[2])/281474976710656; 2*x[1] - (1235362710535631*x[2])/140737488355328 + (1438649568215601*y[1])/281474976710656 - (88889*y[2])/100000 + 4/5]
end

function f(xy)
	x = @view xy[1:n1]
	y = @view xy[n1+1:n1+n2]
	(y[2]*((1663000605777713*y[1])/140737488355328 - (8134052617985469*y[2])/562949953421312))/2 + y[2]*((1213*x[1])/40 + (1213*x[2])/40 + 1836994362631405/140737488355328) - y[1]*((357*x[1])/20 - (263*x[2])/40 + 2562904253819351/140737488355328) + (y[1]*((5939696217547331*y[1])/281474976710656 + (1663000605777713*y[2])/140737488355328))/2
end

function g(xy)
	x = @view xy[1:n1]
	y = @view xy[n1+1:n1+n2]
	[1394082931465561/35184372088832 - (523855893905969*x[2])/70368744177664 - (1094625222180303*y[1])/281474976710656 - (88889*y[2])/50000 - 5*x[1]; (2345623867672211*x[1])/281474976710656 - 3*x[2] - (1939050152312271*y[1])/281474976710656 - (1720124544926257*y[2])/281474976710656 + 60; (2439450736408941*x[1])/281474976710656 + (602044012936655*x[2])/70368744177664 + (1501198937540243*y[1])/281474976710656 + 7*y[2] - 2546566742483623/35184372088832; (1438649568215601*x[2])/281474976710656 - (453487149728305*x[1])/70368744177664 - (36111*y[1])/25000 - (312749661372977*y[2])/70368744177664 + 4866389910103093/281474976710656]
end

xy_init = Float64[1;1;1;1]
Ff_optimal = Float64[2251.55;565.78;1]

bop = construct_bop(n1, n2, F, G, f, g);
sol, is_success, iter_count = solve_bop(bop; x_init=xy_init, verbosity=5)
if is_success
    @info "success" sol
end
